	public static int intArray(int start){
		int[] b = new int[5];
		for (int i = 0; i < b.length; i++){
			b[i]= i + start; 
		}
		return b[2];
	}

public static int intArray(int)
	//nofStackSlots=4, nofLocalSlots=3, codeLen=28 
		  0 iconst_5
		  1 newarray int
		  3 astore_1 [b]
		  4 iconst_0
		  5 istore_2 [i]
		  6 goto 18		  
		  9 aload_1 [b]
		 10 iload_2 [i]
		 11 iload_2 [i]
		 12 iload_0 [start]
		 13 iadd
		 14 iastore
		 15 iinc i, 1		 
		 18 iload_2 [i]
		 19 aload_1 [b]
		 20 arraylength
		 21 if_icmplt 9		 
		 24 aload_1 [b]
		 25 iconst_2
		 26 iaload
		 27 ireturn

method intArray
	nodeNr:0 from 0 to 6	visited: false
		predecessor: 
		successor: CFG-Node [18:21]	
	nodeNr:1 from 9 to 15	visited: false
		predecessor: CFG-Node [18:21]	
		successor: CFG-Node [18:21]	
	nodeNr:2 from 18 to 21	is loop header visited: false
		predecessor: CFG-Node [0:6]	CFG-Node [9:15]	
		successor: CFG-Node [24:27]	CFG-Node [9:15]	
	nodeNr:3 from 24 to 27	visited: false
		predecessor: CFG-Node [18:21]	
		successor: 

SSA for Method: intArray
   SSANode 0:
      EntrySet {[ , , , ], [ , , ]}
         0: NoOpnd[sCloadConst] 5 (Integer),   end=1, reg=2
         1: Call[sCnew] {0} (Integer-Array),   5,   end=10, index=1, reg=2, join={10}
         2: NoOpnd[sCloadConst] 0 (Integer),   end=11, index=2, reg=3, join={11}
         3: NoOpnd[sCloadLocal] (Integer),   end=9, index=0, reg=31, join={9}
         4: Branch[sCBranch]  (Void)
      ExitSet {[ , , , ], [ 3 (Integer), 1 (Integer-Array), 2 (Integer) ]}

   SSANode 1:
      EntrySet {[ , , , ], [ Phi-Function(9), Phi-Function(10), Phi-Function(11) ]}
         5: Dyadic[sCadd] {11, 9} (Integer),   end=6, reg=4
         6: StoreToArray[sCstoreToArray] {10, 11, 5} (Void),   end=6
         7: NoOpnd[sCloadConst] 1 (Integer),   end=8
         8: Dyadic[sCadd] {11, 7} (Integer),   end=11, index=2, reg=3, join={11}
      ExitSet {[ , , , ], [ Phi-Function(9), Phi-Function(10), 8 (Integer) ]}

   SSANode 2:
      EntrySet {[ , , , ], [ Phi-Function(9), Phi-Function(10), Phi-Function(11) ]}
         9: PhiFunction[sCPhiFunc] {3} (Phi-Function),   start=3, end=9, index=0, reg=31 deleted
         10: PhiFunction[sCPhiFunc] {1} (Phi-Function),   start=1, end=15, index=1, reg=2 deleted
         11: PhiFunction[sCPhiFunc] {2, 8} (Phi-Function),   start=2, end=13, index=2, reg=3
         12: MonadicRef[sCalength] {10} (Integer),   end=13, reg=4
         13: Branch[sCBranch] {12, 11} (Void)
      ExitSet {[ , , , ], [ Phi-Function(9), Phi-Function(10), Phi-Function(11) ]}

   SSANode 3:
      EntrySet {[ , , , ], [ Phi-Function(9), Phi-Function(10), Phi-Function(11) ]}
         14: NoOpnd[sCloadConst] 2 (Integer),   end=15, reg=3
         15: Dyadic[sCloadFromArray] {10, 14} (Integer),   end=16, reg=2
         16: Branch[sCreturn] {15} (Void)
      ExitSet {[ , , , ], [ Phi-Function(9), Phi-Function(10), Phi-Function(11) ]}

Code for Method: intArray
	9421ffe0	[0x0]	stwu  r1, -32(r1)
	7c0802a6	[0x4]	mfspr  r0, LR
	9001001c	[0x8]	stw  r0, 28(r1)
	bfe10010	[0xc]	stmw  r31, 16(r1)
	7c5f1378	[0x10]	lr  r31, r2
	38400005	[0x14]	li  r2, 5
	e020000	[0x18]	twi  ifless, r2, 0
	38600000	[0x1c]	li  r3, 0
	3c630000	[0x20]	addis  r3, r3, 0
	7c6803a6	[0x24]	mtspr  LR, r3
	3860000a	[0x28]	li  r3, 10
	4e800020	[0x2c]	bclr always, CRF7[SO]
	38600000	[0x30]	li  r3, 0
	48000024	[0x34]	b  36, [0x58]	
	7c83fa14	[0x38]	add  r4, r3, r31
	c820000	[0x3c]	twi  ifequal, r2, 0
	a8a20008	[0x40]	lha  r5, 8(r2)
	7ca32808	[0x44]	tw  ifgeU, r3, r5
	5465103a	[0x48]	rlwinm  r5, r3, 2, 0, 29
	38c2000c	[0x4c]	addi  r6, r2, 12
	7c85312e	[0x50]	stwx  r4, r5, r6
	38630001	[0x54]	addi  r3, r3, 1
	c820000	[0x58]	twi  ifequal, r2, 0
	a8820008	[0x5c]	lha  r4, 8(r2)
	7c032000	[0x60]	cmp crf0, 0, r3, r4
	419fffd4	[0x64]	bc  iftrue, CRF0[LT], -44, [0x38]	
	38600002	[0x68]	li  r3, 2
	c820000	[0x6c]	twi  ifequal, r2, 0
	a8820008	[0x70]	lha  r4, 8(r2)
	7ca32008	[0x74]	tw  ifgeU, r3, r4
	5464103a	[0x78]	rlwinm  r4, r3, 2, 0, 29
	38a2000c	[0x7c]	addi  r5, r2, 12
	7c44282e	[0x80]	lwzx  r2, r4, r5
	bbe10010	[0x84]	lmw  r31, 16(r1)
	8001001c	[0x88]	lwz  r0, 28(r1)
	7c0803a6	[0x8c]	mtspr  LR, r0
	38210020	[0x90]	addi  r1, r1, 32
	4e800020	[0x94]	bclr always, CRF7[SO]
