
Digit                               = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" .
HexDigit                            = Digit | "a" | "b" | "c" | "d" | "e" | "f" | "A" | "B" | "C" | "D" | "E" | "F" .
IntNumber                           = ( Digit {Digit} ) | ( "0" ( "x" | "X") HexDigit {HexDigit} ) .

Letter                              = a...z | A...Z | "_" .
String                              = '"' {any character except " } '"'.
Designator                          = Letter {Letter | Digit} .

EnumSeparator                       = "," .
AssignOp                            = "=" .
EndToken                            = ";" .

Attribute                           = ContentAttribute | "read" | "write" .
ContentAttribute                    = "const" | "code" | "var" | "heap" | "stack" | "systab" .
Type                                = "GPR" | "FPR" | "SPR" | "gpr" | "fpr" | "spr" | "new" | "NEW" | "unsafe" | "UNSAFE" | "safe" | "SAFE".
RegisterRep                         = "hex" | "dez" | "bin" | "float" | "Hex" | "Dez" | "Bin" | "Float" .
SystemModules                       = "kernel" | "interrupts" | "exceptions" | "heap" | "default"  .

AttributeEnum                       = Attribute { EnumSeparator Attribute } .
StringEnum                          = String { EnumSeparator String } .
SegmentDesignator                   = Designator { "." Designator }  .
ConcatenatedDesignator              = Designator { ("." | "/") Designator } [".*" | "/*"] .
ConcatenatedDesignatorEnum          = ConcatenatedDesignator { EnumSeparator ConcatenatedDesignator} .

Factor                              = IntNumber | "(" Expression ")" | Designator .
Term                                = Factor { ( "*" | "/" ) Factor } .
Expression                          = Term { ( "+" | "-" ) Term } .

VarAssigment                        = Designator AssignOp Expression  EndToken .
VersionAssigment                    = "version" AssignOp String EndToken .
FileDescAssigment                   = "description" AssignOp String EndToken .
ImportAssigment                     = "import" AssignOp StringEnum EndToken .
AttributeAssigment                  = "attributes" AssignOp AttributeEnum EndToken .
WidthAssigment                      = "width" AssignOp Expression  EndToken .
SizeAssigment                       = "size" AssignOp Expression EndToken .
SegmentSizeAssignment               = "segmentsize" AssingOp Expression EndToken .
ArraySizeAssignment                 = "arraysize" AssignOp Expression EndToken . 
NofSegmentAssignment                = "nofsegments" AssignOp Expression EndToken .
BaseAssigment                       = "base" AssignOp Expression EndToken .
RegAssigment                        = Designator AssignOp Expression EndToken .
AddressAssignment                   = "addr" AssignOp Expression EndToken .
RegisterRepresentationAssignment    = "repr" AssignOp RegisterRep EndToken . 
TypeAssignment                      = "type" AssignOp Type EndToken .
LibPathAssignment                   = "libpath" AssignOp String EndToken .
TargetConfigurationAssignment       = "targetconfiguration" AssignOp Designator EndToken .
ByteCodeAssignment                  = "bc" AssignOp IntNumber EndToken .

MethodBlock                         = "method" Designator "{" TypeAssignment [ByteCodeAssignment] "}" .
KernelModule                        = "kernel" "{" ClassAssignment [MethodBlock] "}" .
HeapModule                          = "heap" "{" ClassAssignment [MethodBlock] "}" . 
HwdModule                           = "interrupt" "{" ClassAssignment [MethodBlock] "}" .
ExceptionModule                     = "exception" "{" ClassAssignment [MethodBlock] "}".
BitOpsModule                        = "bitops" "{" ClassAssignment [MethodBlock] "}" .

ClassAssignment                     = "class" AssignOp Designator { "."|"/" Designator } EndToken . 
RootClassAssignments                = "rootClasses" AssignOp StringEnum EndToken .
PrintLevelAssignment                = "printlevel" AssignOp IntNumber EndToken .
DebugLevelAssignment                = "DebugLevel" AssignOp IntNumber EndToken .

MetaBlock                           = "meta" "{" VersionAssigment FileDescAssigment [ImportAssigment] "}" .
ConstantsBlock                      = "constants" "{" {VarAssigment} "}" .
SysConstBlock                       = "sysconst" "{" {VarAssigment} "}" .
DeviceBlock                         = "device" Designator "{" [AttributeAssigment] [BaseAssigment] [WidthAssigment] [SizeAssigment] "}" .
RegInitBlock                        = "reginit" "{" { RegAssigment } "}" .
RegisterBlock                       = "register" Designator "{" TypeAssignment AddressAssignment SizeAssignment [registerRepresentationAssignment] "}" . 
SegmentBlock                        = "segment" SegmentDesignator "{" ([AttributeAssigment] [BaseAssigment] [WidthAssigment] [SizeAssigment]) {SegmentArray | SegmentBlock} "}".
SegmentArray                        = "segmentarray" Designator  "{" SegmentSizeAssignment [AttributeAssigment] [BaseAssigment] [ArraySizeAssignment][WidhtAssignment][NofSegmentAssignment] "}" .
MemoryMapBlock                      = "memorymap" "{" {DeviceBlock | SegmentBlock | RegInitBlock | ModulesBlock } "}" .
RegisterMapBlock                    = "registermap" "{" { RegisterBlock } "}" . 
ModulesBlock                        = "modules" "{" {(SystemModules | ConcatenatedDesignatorEnum ) ":" ContentAttribute "@" SegmentDesignator {EnumSeparator ContentAttribute "@" SegmentDesignator} EndToken } "}" . 
TargetConfigurationBlock            = "targetconfiguration" Designator "{" ModulesBlock "}" .
ProjectBlock                        = "project" "{" RootClassAssignments LibPathAssignment targetConfigurationAssignment DebugLevelAssignment PrintLevelAssignment "}" .
OperatingSystemBlock                = "operatingsystem" "{" KernelAssignment HeapAssignment InterruptAssignment ExceptionAssignment "}" .

Config                              = MetaBlock { ProjectBlock | ConstantsBlock | SysConstBlock | MemoryMapBlock | RegisterMapBlock | TargetConfigurationBlock | RegInitBlock | OperatingSystemBlock } .

